SpringMVC02
1. pom.xml : ojdbc6(+repository), mybatis, mybatis-spring, commons-dbcp, spring-orm (객체랑 관계형 db랑 자동으로 매핑해주겠다!)
2. web.xml : applicationContext.xml(이름 바꾸고 위치 ->appServlet으로 넣어버림), mapping, encoding filter
3. /WEB-INF/spring/sqls/test.sql
4. dto, dao, biz, controller
5. src/main/resources/mybatis/board-mapper.xml
6. src/main/resources/mybatis/db.properties
7. src/main/webapp/WEB-INF/spring/sqls/config.xml
8. applicationContext, servlet-context 설정

_filter (필터를 거쳐서 들어옴)
9. com/mvc/upgrade/common/filter/LogFilter(impl javax.servlet.Filter) -> DispatcherServlet 앞에 필터를 거쳐 들어오는 요청 처리
10. web.xml : filter 등록

_aop
11. pom.xml : aspectjweaver
12. com/upgrade/common/aop/LogAop 클래스 생성
13. WEB-INF/spring/appServlet/aop-context.xml
14. web.xml : aop-context 추가 (init-param) (servlet -> init-param -> param-value)

_login
jackson : json 데이터를 알아서 받아서 알아서 객체에 담아 처리 (json 과 관련된 방법을 spring 에서 처리해줌)
15. pom.xml : jackson-core-asl; jackson-mapper-asl (spring 4.x 이후 부터는 다른 jackson 사용) (Jackson Databind)
16. WEB-INF/spring/sqls/test.sql
17. dto, dao, biz, controller
18. src/main/resources/mybatis/member-mapper.xml 만들기
19. WEB-INF/spring/sqls/config.xml 에 생성한 mapper 등록 및 typeAlias 등록

_interceptor (request, response 를 가로챈다..!!)
20. com/mvc/upgrade/common/interceptor/LoginInterceptor(impl HandlerInterceptor)
21. servlet-context.xml : Interceptor 추가

_transaction
22.(Board) dao, biz, controller
23. servlet-context.xml : tx (Namespace -> <tr:annotation-driven/>
24. applicationContext.xml : transactionManager
25. index.html
26. LoginInterceptor

_security
27. pom.xml : spring-security-web
28. /WEB-INF/spring/appServlet/security-context.xml 추가
29. web.xml : security-context 추가
30. dao biz controller 회원가입(insert) 구조 만들어줍시다.



